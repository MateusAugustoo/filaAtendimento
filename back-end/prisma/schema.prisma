// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Service {
  id          Int         @id @default(autoincrement())
  typeService String      @unique
  attendant   Attendant[] @relation("AttendantService")
  passwords   Password[]  @relation("PasswordService")
}

model Attendant {
  id        Int      @id @default(autoincrement())
  name      String
  cpf       String   @unique
  password  String
  service   Service? @relation("AttendantService", fields: [serviceId], references: [id], onDelete: Cascade)
  serviceId Int?
  role      String   
}

model Password {
  id          Int            @id @default(autoincrement())
  password    String         @unique
  day         DateTime       @default(now())
  status      PasswordStatus
  service     Service?       @relation("PasswordService", fields: [typeService], references: [typeService], onDelete: Cascade)
  typeService String?
}

enum PasswordStatus {
  NA // n√£o atendidos
  A // atendidos
  C // chamados
}
